{
  "openapi": "3.0.3",
  "info": {
    "title": "Chat APIs",
    "version": "3.0",
    "description": "Manage messages, users, groups for a particular app using our Chat API."
  },
  "servers": [
    {
      "url": "https://{appId}.api-{region}.cometchat.io/v3.0",
      "variables": {
        "appId": {
          "default": "<appId>",
          "description": "(Required) App ID"
        },
        "region": {
          "default": "<region>",
          "enum": [
            "eu,us"
          ],
          "description": ""
        },
        "apiKey": {
          "default": "<apiKey>",
          "description": "(Required) API Key"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "API Keys",
      "description": "The API keys are used to authorise the APIs"
    },
    {
      "name": "roles",
      "description": "The roles are used to give user access rights"
    },
    {
      "name": "users",
      "description": "The REST collection for users."
    },
    {
      "name": "Auth Tokens",
      "description": "The auth tokens are used to login end users using client SDKs."
    },
    {
      "name": "Blocked Users",
      "description": "The REST collections for blocked users."
    },
    {
      "name": "friends",
      "description": "List,add and remove friends by passing uid in path variables"
    },
    {
      "name": "groups",
      "description": "The REST collections for groups."
    },
    {
      "name": "banned users",
      "description": "Ban and Unban user by passing other uid in path variables."
    },
    {
      "name": "members",
      "description": "The REST collections for group members."
    },
    {
      "name": "messages",
      "description": "The REST collections for messages."
    },
    {
      "name": "conversations",
      "description": "The REST collections for conversations."
    }
  ],
  "paths": {
    "/apikeys": {
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Create",
        "description": "Creates a new API key",
        "operationId": "createapikey",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "scope"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Friendly name for the API key."
                  },
                  "scope": {
                    "type": "string",
                    "description": "Scope for the API key.",
                    "default": "authOnly",
                    "enum": [
                      "authOnly",
                      "fullAccess"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "apiKey": "b4b56cb3fa2e170a4888e4fe4d9d1361aedaeddad",
                        "name": "Jack's apikey",
                        "scope": "authOnly",
                        "createdAt": 1544005863
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "apiKey": {
                          "type": "string",
                          "example": "b4b56cb3fa2e170a4888e4fe4d9d1361aedaeddad"
                        },
                        "name": {
                          "type": "string",
                          "example": "Jack's apikey"
                        },
                        "scope": {
                          "type": "string",
                          "example": "authOnly"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544005863,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "List",
        "description": "Lists API keys",
        "operationId": "listapikeys",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope of the apikey. Available values: fullAccess, authOnly",
            "schema": {
              "type": "string",
              "enum": [
                "fullAccess",
                "authOnly"
              ]
            }
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Searches for specified keyword in name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "apiKey": "b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9",
                          "name": "Mark's apikey",
                          "scope": "authOnly",
                          "createdAt": 1544003863
                        },
                        {
                          "apiKey": "b4b56cb3fa2e170a4888e4fe4d9d1361aedaeddad",
                          "name": "Jack's apikey",
                          "scope": "fullAccess",
                          "createdAt": 1543905925
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 2,
                          "count": 2,
                          "per_page": 10,
                          "current_page": 1,
                          "total_pages": 1
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiKey": {
                            "type": "string",
                            "example": "b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9"
                          },
                          "name": {
                            "type": "string",
                            "example": "Mark's apikey"
                          },
                          "scope": {
                            "type": "string",
                            "example": "authOnly"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1544003863,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 10,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {}
        ]
      }
    },
    "/apikeys/{apiKey}": {
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "Get",
        "description": "Retrieves API keys",
        "operationId": "getapikey",
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "An apikey to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "apiKey": "b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9",
                        "name": "Mark's apikey",
                        "scope": "authOnly",
                        "createdAt": 1544003863
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "apiKey": {
                          "type": "string",
                          "example": "b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9"
                        },
                        "name": {
                          "type": "string",
                          "example": "Mark's apikey"
                        },
                        "scope": {
                          "type": "string",
                          "example": "authOnly"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544003863,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "API Keys"
        ],
        "summary": "Update",
        "description": "Updates an API key",
        "operationId": "updateapikey",
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "An apikey to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Friendly name for the API key."
                  },
                  "scope": {
                    "type": "string",
                    "description": "Scope for the API key. Possible values: userauth, admin."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "apiKey": "b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9",
                        "name": "Mark's apikey",
                        "scope": "fullAccess",
                        "createdAt": 1544003863,
                        "updatedAt": 1544005966
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "apiKey": {
                          "type": "string",
                          "example": "b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9"
                        },
                        "name": {
                          "type": "string",
                          "example": "Mark's apikey"
                        },
                        "scope": {
                          "type": "string",
                          "example": "fullAccess"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544003863,
                          "default": 0
                        },
                        "updatedAt": {
                          "type": "integer",
                          "example": 1544005966,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "API Keys"
        ],
        "summary": "Delete",
        "description": "Deletes an API key",
        "operationId": "deleteapikey",
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "An apikey to retrieve.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "message": "The api key b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9 has been deleted successfully."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "The api key b4b56cb3fa2e170a4888e4fe4d9d1361bf8b26d9 has been deleted successfully."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create",
        "description": "Creates a new user",
        "operationId": "createuser",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "uid",
                  "name"
                ],
                "properties": {
                  "uid": {
                    "type": "string",
                    "description": "Unique identifier of the user. Please refer to https://prodocs.cometchat.com/docs/concepts#uid"
                  },
                  "name": {
                    "type": "string",
                    "description": "Display name of the user."
                  },
                  "avatar": {
                    "type": "string",
                    "description": "URL to profile picture of the user."
                  },
                  "link": {
                    "type": "string",
                    "description": "URL to profile page."
                  },
                  "role": {
                    "type": "string",
                    "description": "User role of the user for role based access control."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Additional information about the user as JSON.",
                    "format": "json"
                  },
                  "withAuthToken": {
                    "type": "boolean",
                    "description": "Includes authToken of created user in response."
                  },
                  "tags": {
                    "type": "array",
                    "description": "A list of tags to identify specific users.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "uid": "tomswayer",
                        "name": "Tom Swayer",
                        "status": "offline",
                        "createdAt": 1544090097
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "example": "tomswayer"
                        },
                        "name": {
                          "type": "string",
                          "example": "Tom Swayer"
                        },
                        "status": {
                          "type": "string",
                          "example": "offline"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544090097,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List",
        "description": "Lists all the users of an app",
        "operationId": "listusers",
        "parameters": [
          {
            "name": "searchKey",
            "in": "query",
            "description": "Searches for given keyword in user's list (either uid, name or email).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "User list can be fetched depending on the user status. (available, busy, away, offline).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Fetches users count.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of users to be fetched in a request. The default value is 100 and the maximum value is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Retrieves user list based on role.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withTags",
            "in": "query",
            "description": "Includes tags in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Fetches only those users that have these tags.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Fetches users based on multiple roles.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "onlyDeactivated",
            "in": "query",
            "description": "Fetches all the deactivated users of an app.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withDeactivated",
            "in": "query",
            "description": "Fetches all the users including deactivated users.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "uid": "superhero2",
                          "name": "Capitan America",
                          "avatar": "https://data.cometchat.com/assets/images/avatars/captainamerica.png",
                          "status": "offline",
                          "role": "default",
                          "createdAt": 1561440316
                        },
                        {
                          "uid": "superhero5",
                          "name": "Cyclops",
                          "avatar": "https://data.cometchat.com/assets/images/avatars/cyclops.png",
                          "status": "offline",
                          "role": "default",
                          "createdAt": 1561440317
                        },
                        {
                          "uid": "superhero3",
                          "name": "Spiderman",
                          "avatar": "https://data.cometchat.com/assets/images/avatars/spiderman.png",
                          "status": "offline",
                          "role": "default",
                          "createdAt": 1561440316
                        },
                        {
                          "uid": "superhero4",
                          "name": "Wolverine",
                          "avatar": "https://data.cometchat.com/assets/images/avatars/wolverine.png",
                          "status": "offline",
                          "role": "default",
                          "createdAt": 1561440317,
                          "updatedAt": 1585814340
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 4,
                          "count": 4,
                          "per_page": 100,
                          "current_page": 1,
                          "total_pages": 1
                        },
                        "cursor": {
                          "updatedAt": 1561440779,
                          "affix": "prepend"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "example": "superhero2"
                          },
                          "name": {
                            "type": "string",
                            "example": "Capitan America"
                          },
                          "avatar": {
                            "type": "string",
                            "example": "https://data.cometchat.com/assets/images/avatars/captainamerica.png"
                          },
                          "status": {
                            "type": "string",
                            "example": "offline"
                          },
                          "role": {
                            "type": "string",
                            "example": "default"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1561440316,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 4,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 4,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 100,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "updatedAt": {
                              "type": "integer",
                              "example": 1561440779,
                              "default": 0
                            },
                            "affix": {
                              "type": "string",
                              "example": "prepend"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Reactivate",
        "description": "Reactivates users for the specified uids",
        "operationId": "reactivateuser",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uidsToActivate": {
                    "type": "array",
                    "description": "uids that needs to reactivated.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "superhero3": {
                          "success": true,
                          "message": "User with superhero3 has been activated successfully."
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "superhero3": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "message": {
                              "type": "string",
                              "example": "User with superhero3 has been activated successfully."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deactivate",
        "description": "Deactivates users for the specified uids",
        "operationId": "deactivate",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uidsToDeactivate": {
                    "type": "array",
                    "description": "uids that needs to deactivated.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "alreadyDeactivatedUids": [
                          "superhero5"
                        ],
                        "deactivatedUids": [
                          "superhero4"
                        ],
                        "notFound": [
                          "superhuman"
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "alreadyDeactivatedUids": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "superhero5"
                          }
                        },
                        "deactivatedUids": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "superhero4"
                          }
                        },
                        "notFound": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "superhuman"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/users/{uid}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get",
        "description": "Retrieves user details for a specified uid.",
        "operationId": "getuser",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "uid": "superhero2",
                        "name": "Capitan America",
                        "avatar": "https://data.cometchat.com/assets/images/avatars/captainamerica.png",
                        "status": "offline",
                        "role": "default",
                        "createdAt": 1561440316
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "example": "superhero2"
                        },
                        "name": {
                          "type": "string",
                          "example": "Capitan America"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://data.cometchat.com/assets/images/avatars/captainamerica.png"
                        },
                        "status": {
                          "type": "string",
                          "example": "offline"
                        },
                        "role": {
                          "type": "string",
                          "example": "default"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1561440316,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update",
        "description": "Updates a user with the provided uid",
        "operationId": "updateuser",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Display name of the user."
                  },
                  "avatar": {
                    "type": "string",
                    "description": "URL to profile picture of the user."
                  },
                  "link": {
                    "type": "string",
                    "description": "URL to profile page."
                  },
                  "role": {
                    "type": "string",
                    "description": "User role of the user for role based access control."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Additional information about the user as JSON. If you plan to use [Email Notification](doc:android-extensions-email-notification#section-configure-your-backend-to-store-emails) or [SMS Notification](doc:android-extensions-sms-notification#section-configure-your-backend-to-store-phone-number) extensions, Please add the private metadata here.",
                    "default": "{\"@private\":{\"email\":\"user@email.com\", \"contactNumber\":\"0123456789\"}}",
                    "format": "json"
                  },
                  "tags": {
                    "type": "array",
                    "description": "Updates tags of a specific group.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unset": {
                    "type": "array",
                    "description": "The unsettable user attributes are avatar, link and metadata.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "uid": "superhero1",
                        "name": "Test Name",
                        "avatar": "https://data-eu.cometchat.io/assets/images/avatars/cyclops.png",
                        "status": "offline",
                        "role": "default",
                        "createdAt": 1585813489,
                        "updatedAt": 1587529793
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "example": "superhero1"
                        },
                        "name": {
                          "type": "string",
                          "example": "Test Name"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://data-eu.cometchat.io/assets/images/avatars/cyclops.png"
                        },
                        "status": {
                          "type": "string",
                          "example": "offline"
                        },
                        "role": {
                          "type": "string",
                          "example": "default"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1585813489,
                          "default": 0
                        },
                        "updatedAt": {
                          "type": "integer",
                          "example": 1587529793,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete",
        "description": "Deletes a user for the specified uid",
        "operationId": "deleteuser",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permanent": {
                    "type": "boolean",
                    "description": "Permanently deletes the user along with all the messages, conversations, etc.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "message": "A user with uid superhero30 has been deleted successfully."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "A user with uid superhero30 has been deleted successfully."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/roles": {
      "post": {
        "tags": [
          "roles"
        ],
        "summary": "Create",
        "description": "Creates a new user role",
        "operationId": "createrole",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "role",
                  "name"
                ],
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "A unique identifier for the role."
                  },
                  "name": {
                    "type": "string",
                    "description": "Friendly name of the role."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the role."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Addition information about the role as JSON.",
                    "format": "json"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "role": "doctor",
                        "name": "Doctor",
                        "createdAt": 1544013619
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "example": "doctor"
                        },
                        "name": {
                          "type": "string",
                          "example": "Doctor"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544013619,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "List",
        "description": "Lists the user roles",
        "operationId": "listroles",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "role": "teacher",
                          "name": "Teacher",
                          "createdAt": 1544013619
                        },
                        {
                          "role": "student",
                          "name": "Student",
                          "createdAt": 1544013987
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 2,
                          "count": 2,
                          "per_page": 10,
                          "current_page": 1,
                          "total_pages": 1
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "example": "teacher"
                          },
                          "name": {
                            "type": "string",
                            "example": "Teacher"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1544013619,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 10,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/roles/{role}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Get",
        "description": "Retrieves role details for a given role.",
        "operationId": "getrole",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "A role to get.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "role": "manager",
                        "name": "Manager",
                        "createdAt": 1544013619
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "example": "manager"
                        },
                        "name": {
                          "type": "string",
                          "example": "Manager"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544013619,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "roles"
        ],
        "summary": "Update",
        "description": "Updates a given role.",
        "operationId": "updaterole",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "A role to update.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Friendly name of the role."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the role."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Additional information about the role."
                  },
                  "unset": {
                    "type": "array",
                    "description": "The unsettable user attributes are description and metadata.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "role": "vendor",
                        "name": "Vendor",
                        "description": "Vendor of a products",
                        "createdAt": 1544013619,
                        "updatedAt": 1544015283
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "example": "vendor"
                        },
                        "name": {
                          "type": "string",
                          "example": "Vendor"
                        },
                        "description": {
                          "type": "string",
                          "example": "Vendor of a products"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544013619,
                          "default": 0
                        },
                        "updatedAt": {
                          "type": "integer",
                          "example": 1544015283,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "roles"
        ],
        "summary": "Delete",
        "description": "Deletes a role.",
        "operationId": "deleterole",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "A role to delete.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "message": "The role editor has been deleted successfully."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "The role editor has been deleted successfully."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/users/{uid}/auth_tokens": {
      "post": {
        "tags": [
          "Auth Tokens"
        ],
        "summary": "Create",
        "description": "Creates auth token for a user with the specified uid.",
        "operationId": "createauthtoken",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Generates new auth token forcefully.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "uid": "tomsawyer",
                        "authToken": "tomsawyer_195d48f2a08dcdf41e9811eac49c6e8934cd6963",
                        "createdAt": 1544166503
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "example": "tomsawyer"
                        },
                        "authToken": {
                          "type": "string",
                          "example": "tomsawyer_195d48f2a08dcdf41e9811eac49c6e8934cd6963"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544166503,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Auth Tokens"
        ],
        "summary": "List",
        "description": "Lists auth tokens for a user with the specified uid.",
        "operationId": "listauthtokens",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "uid": "tomsawyer",
                          "authToken": "tomsawyer_6fa051464e3c9de823087d1a905e02870cbcc078",
                          "createdAt": 1544180895
                        },
                        {
                          "uid": "tomsawyer",
                          "authToken": "tomsawyer_b91578cc75f284dcf120f204374862e6c68d2cc8",
                          "createdAt": 1544180854
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 2,
                          "count": 2,
                          "per_page": 25,
                          "current_page": 1,
                          "total_pages": 1
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "example": "tomsawyer"
                          },
                          "authToken": {
                            "type": "string",
                            "example": "tomsawyer_6fa051464e3c9de823087d1a905e02870cbcc078"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1544180895,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 25,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "Auth Tokens"
        ],
        "summary": "Flush",
        "description": "Deletes all the auth tokens for the specified uid.",
        "operationId": "flushauthtokens",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "All the auth tokens are deleted successfully for an uid tomsawyer"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "All the auth tokens are deleted successfully for an uid tomsawyer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/users/{uid}/auth_tokens/{authToken}": {
      "get": {
        "tags": [
          "Auth Tokens"
        ],
        "summary": "Get",
        "description": "Retrieves details of an auth token for the specified uid and auth token.",
        "operationId": "getauthtoken",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "authToken",
            "in": "path",
            "description": "An auth token of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "uid": "tomsawyer",
                        "authToken": "tomsawyer_00569e4e821722dfe22799454b3539614acf9f1e",
                        "createdAt": 1543952401
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "example": "tomsawyer"
                        },
                        "authToken": {
                          "type": "string",
                          "example": "tomsawyer_00569e4e821722dfe22799454b3539614acf9f1e"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1543952401,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "Auth Tokens"
        ],
        "summary": "Update",
        "description": "Updates the details of an auth token for the specified uid and auth token.",
        "operationId": "updateauthtoken",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "authToken",
            "in": "path",
            "description": "An auth token of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "platform": {
                    "type": "string",
                    "description": "The platform on which the auth token is being used."
                  },
                  "userAgent": {
                    "type": "string",
                    "description": "userAgent from which the auth token is used."
                  },
                  "appInfo": {
                    "type": "string",
                    "description": "JSON data containing app information.",
                    "format": "json"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "uid": "tomsawyer",
                        "authToken": "tomsawyer_00569e4e821722dfe22799454b3539614acf9f1e",
                        "platform": "iOS",
                        "userAgent": "MyApp/1 iPhone5,2 iOS/10_1 CFNetwork/808.3 Darwin/16.3.0",
                        "appInfo": {
                          "version": "v1.0.2",
                          "buildNumber": "10",
                          "apiVersion": "v1"
                        },
                        "createdAt": 1543952401
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "Auth Tokens"
        ],
        "summary": "Delete",
        "description": "Deletes an auth token for the specified uid.",
        "operationId": "deleteauthtoken",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "authToken",
            "in": "path",
            "description": "An auth token of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "The auth token superhero1_6fa051464e3c9de823087d1a905e02870cbcc078 has been deleted successfully."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "The auth token superhero1_6fa051464e3c9de823087d1a905e02870cbcc078 has been deleted successfully."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Create",
        "description": "Creates a group.",
        "operationId": "creategroup",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "guid",
                  "name",
                  "type"
                ],
                "properties": {
                  "guid": {
                    "type": "string",
                    "description": "A unique identifier for a group."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the group."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the group. Can be public, password or private."
                  },
                  "icon": {
                    "type": "string",
                    "description": "An URL for a group icon."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description about the group"
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Additional data for the group.",
                    "default": "{}",
                    "format": "json"
                  },
                  "owner": {
                    "type": "string",
                    "description": "The uid that you wish to make owner of the group."
                  },
                  "tags": {
                    "type": "array",
                    "description": "List of tags to identify specific groups.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "guid": "supergroup1",
                        "name": "Avengers",
                        "type": "public",
                        "createdAt": 1544839863
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guid": {
                          "type": "string",
                          "example": "supergroup1"
                        },
                        "name": {
                          "type": "string",
                          "example": "Avengers"
                        },
                        "type": {
                          "type": "string",
                          "example": "public"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544839863,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "List",
        "description": "lists the groups.",
        "operationId": "listgroups",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of groups to be fetched in a request. The default value is 100 and the maximum value is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "affix",
            "in": "query",
            "description": "Determines whether to fetch the groups either before or after createdAt/updatedAt timestamp. Possible values are append(after) and prepend(before).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Fetches the groups list after a particular updatedAt timestamp.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withTags",
            "in": "query",
            "description": "Includes those groups that have tags.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Fetches only those groups that have these tags.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Fetches groups based on group type(public, protected, password).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Fetches groups based on multiple types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "guid": "supergroup01",
                          "name": "Avengers",
                          "type": "public",
                          "createdAt": 1544839863,
                          "membersCount": 4
                        },
                        {
                          "guid": "supergroup02",
                          "name": "X-Men",
                          "type": "password",
                          "createdAt": 1543907194,
                          "membersCount": 8
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 2,
                          "count": 2,
                          "per_page": 25,
                          "current_page": 1,
                          "total_pages": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/groups/{guid}": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get",
        "description": "Retrieves details of a group for a given guid.",
        "operationId": "getgroup",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "guid": "supergroup01",
                        "name": "Avengers",
                        "type": "public",
                        "createdAt": 1544839863,
                        "membersCount": 4
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guid": {
                          "type": "string",
                          "example": "supergroup01"
                        },
                        "name": {
                          "type": "string",
                          "example": "Avengers"
                        },
                        "type": {
                          "type": "string",
                          "example": "public"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544839863,
                          "default": 0
                        },
                        "membersCount": {
                          "type": "integer",
                          "example": 4,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "groups"
        ],
        "summary": "Update",
        "description": "Updates the group details for a given guid.",
        "operationId": "updategroup",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the group."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the group. The available values are: public, password and private."
                  },
                  "icon": {
                    "type": "string",
                    "description": "An URL to the group icon."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description about the group."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Additional group data.",
                    "default": "{}",
                    "format": "json"
                  },
                  "owner": {
                    "type": "string",
                    "description": "The uid that you wish to make the owner of the group."
                  },
                  "tags": {
                    "type": "array",
                    "description": "Updates tags of a group.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "unset": {
                    "type": "array",
                    "description": "The unsettable user attributes are icon, description and metadata.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "guid": "supergroup1",
                        "name": "Avengers",
                        "type": "private",
                        "createdAt": 1544839863,
                        "updatedAt": 1544843326
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guid": {
                          "type": "string",
                          "example": "supergroup1"
                        },
                        "name": {
                          "type": "string",
                          "example": "Avengers"
                        },
                        "type": {
                          "type": "string",
                          "example": "private"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1544839863,
                          "default": 0
                        },
                        "updatedAt": {
                          "type": "integer",
                          "example": 1544843326,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Delete",
        "description": "Deletes a group with a given guid.",
        "operationId": "deletegroup",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "A group with guid supergroup01 has been deleted successfully."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "A group with guid supergroup01 has been deleted successfully."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/groups/{guid}/bannedusers/{uid}": {
      "post": {
        "tags": [
          "banned users"
        ],
        "summary": "Ban",
        "description": "Bans a member from a group for a given guid and uid.",
        "operationId": "bangroupmember",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "The user with uid superhero30 has been banned from the group with guid supergroup01"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "The user with uid superhero30 has been banned from the group with guid supergroup01"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "banned users"
        ],
        "summary": "Unban",
        "description": "Unban a member with given uid from a group for a given guid.",
        "operationId": "unbangroupuser",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "The user with uid superhero30 has been unbanned from the group with guid supergroup1"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "The user with uid superhero30 has been unbanned from the group with guid supergroup1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/groups/{guid}/bannedusers": {
      "get": {
        "tags": [
          "banned users"
        ],
        "summary": "List",
        "description": "Lists banned users from a group for a given guid.",
        "operationId": "listbannedgroupusers",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "uid": "superhero3",
                          "name": "Spiderman",
                          "avatar": "https://data-eu.cometchat-dev.com/assets/images/avatars/spiderman.png",
                          "status": "offline",
                          "role": "default",
                          "scope": "participant",
                          "isBanned": true,
                          "joinedAt": 1587080996,
                          "createdAt": 1573129813
                        },
                        {
                          "uid": "superhero4",
                          "name": "Wolverine",
                          "avatar": "https://data-eu.cometchat-dev.com/assets/images/avatars/wolverine.png",
                          "status": "offline",
                          "role": "default",
                          "scope": "participant",
                          "isBanned": true,
                          "joinedAt": 1587080996,
                          "createdAt": 1573129813
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 2,
                          "count": 2,
                          "per_page": 100,
                          "current_page": 1,
                          "total_pages": 1
                        },
                        "cursor": {
                          "joinedAt": 1587086054,
                          "affix": "prepend"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "example": "superhero3"
                          },
                          "name": {
                            "type": "string",
                            "example": "Spiderman"
                          },
                          "avatar": {
                            "type": "string",
                            "example": "https://data-eu.cometchat-dev.com/assets/images/avatars/spiderman.png"
                          },
                          "status": {
                            "type": "string",
                            "example": "offline"
                          },
                          "role": {
                            "type": "string",
                            "example": "default"
                          },
                          "scope": {
                            "type": "string",
                            "example": "participant"
                          },
                          "isBanned": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "joinedAt": {
                            "type": "integer",
                            "example": 1587080996,
                            "default": 0
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1573129813,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 100,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "joinedAt": {
                              "type": "integer",
                              "example": 1587086054,
                              "default": 0
                            },
                            "affix": {
                              "type": "string",
                              "example": "prepend"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/groups/{guid}/members": {
      "post": {
        "tags": [
          "members"
        ],
        "summary": "Add members",
        "description": "Adds multiple users as per the scope.",
        "operationId": "add-members",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A unique identifier of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "admins": {
                    "type": "array",
                    "description": "uids of users to be made admins.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "moderators": {
                    "type": "array",
                    "description": "uids of the users to be made moderators.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "participants": {
                    "type": "array",
                    "description": "uids of the users to be made participants.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "usersToBan": {
                    "type": "array",
                    "description": "uids of the users to be banned from the group.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "participants": {
                          "superhero4": {
                            "success": true,
                            "message": "Changed scope of user superhero4 for the group supergroup to participant."
                          }
                        },
                        "moderators": {
                          "superhero5": {
                            "success": true,
                            "message": "Changed scope of user superhero5 for the group supergroup to moderator."
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "participants": {
                          "type": "object",
                          "properties": {
                            "superhero4": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Changed scope of user superhero4 for the group supergroup to participant."
                                }
                              }
                            }
                          }
                        },
                        "moderators": {
                          "type": "object",
                          "properties": {
                            "superhero5": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Changed scope of user superhero5 for the group supergroup to moderator."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "members"
        ],
        "summary": "List",
        "description": "List the  members of a group for a given guid",
        "operationId": "listgroupmembers",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "Fetches group members based on multiple scope.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "guid": "supergroup1",
                          "uid": "superhero1",
                          "scope": "admin",
                          "user": {
                            "uid": "superhero1",
                            "name": "Ironman",
                            "status": "offline"
                          },
                          "joinedAt": 1545055310
                        },
                        {
                          "guid": "supergroup1",
                          "uid": "superhero2",
                          "scope": "participant",
                          "user": {
                            "uid": "superhero2",
                            "name": "Captain America",
                            "status": "offline"
                          },
                          "joinedAt": 1545055310
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 2,
                          "count": 2,
                          "per_page": 25,
                          "current_page": 1,
                          "total_pages": 1
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "guid": {
                            "type": "string",
                            "example": "supergroup1"
                          },
                          "uid": {
                            "type": "string",
                            "example": "superhero1"
                          },
                          "scope": {
                            "type": "string",
                            "example": "admin"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "string",
                                "example": "superhero1"
                              },
                              "name": {
                                "type": "string",
                                "example": "Ironman"
                              },
                              "status": {
                                "type": "string",
                                "example": "offline"
                              }
                            }
                          },
                          "joinedAt": {
                            "type": "integer",
                            "example": 1545055310,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 25,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/groups/{guid}/members/{uid}": {
      "put": {
        "tags": [
          "members"
        ],
        "summary": "Change scope",
        "description": "Change scope of a member to the group for a given guid and uid",
        "operationId": "changegroupmemberscope",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scope": {
                    "type": "string",
                    "description": "A scope for the user.",
                    "default": "participant"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "guid": "supergroup1",
                          "uid": "superhero1",
                          "scope": "participant",
                          "user": {
                            "uid": "superhero30",
                            "name": "Hulk",
                            "status": "offline"
                          },
                          "joinedAt": 1545055310
                        },
                        {
                          "guid": "supergroup01",
                          "uid": "superhero29",
                          "scope": "admin",
                          "user": {
                            "uid": "superhero29",
                            "name": "Dr. Strange",
                            "status": "offline"
                          },
                          "joinedAt": 1545055310
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 2,
                          "count": 2,
                          "per_page": 25,
                          "current_page": 1,
                          "total_pages": 1
                        },
                        "cursor": {
                          "value": 1545055310,
                          "field": "joinedAt",
                          "affix": "append"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "guid": {
                            "type": "string",
                            "example": "supergroup1"
                          },
                          "uid": {
                            "type": "string",
                            "example": "superhero1"
                          },
                          "scope": {
                            "type": "string",
                            "example": "participant"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "uid": {
                                "type": "string",
                                "example": "superhero30"
                              },
                              "name": {
                                "type": "string",
                                "example": "Hulk"
                              },
                              "status": {
                                "type": "string",
                                "example": "offline"
                              }
                            }
                          },
                          "joinedAt": {
                            "type": "integer",
                            "example": 1545055310,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 25,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "integer",
                              "example": 1545055310,
                              "default": 0
                            },
                            "field": {
                              "type": "string",
                              "example": "joinedAt"
                            },
                            "affix": {
                              "type": "string",
                              "example": "append"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "members"
        ],
        "summary": "Kick",
        "description": "Removes a member with given uid from a group for a given guid.",
        "operationId": "kickgroupmember",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "A guid of a group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of a user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "A member with uid superhero30 has been kicked from the group with guid supergroup1."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "A member with uid superhero30 has been kicked from the group with guid supergroup1."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/users/{uid}/friends": {
      "post": {
        "tags": [
          "friends"
        ],
        "summary": "Add Friends",
        "description": "The API allows to add multiple friends for a given uid.",
        "operationId": "add-friends",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accepted": {
                    "type": "array",
                    "description": "The array of uids of the friends.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "accepted": {
                          "superhero2": {
                            "success": true,
                            "message": "The friends relationship has been accepted."
                          },
                          "superhero3": {
                            "success": true,
                            "message": "The friends relationship has been accepted."
                          },
                          "superhero4": {
                            "success": true,
                            "message": "The friends relationship has been accepted."
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "accepted": {
                          "type": "object",
                          "properties": {
                            "superhero2": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "message": {
                                  "type": "string",
                                  "example": "The friends relationship has been accepted."
                                }
                              }
                            },
                            "superhero3": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "message": {
                                  "type": "string",
                                  "example": "The friends relationship has been accepted."
                                }
                              }
                            },
                            "superhero4": {
                              "type": "object",
                              "properties": {
                                "success": {
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "message": {
                                  "type": "string",
                                  "example": "The friends relationship has been accepted."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "friends"
        ],
        "summary": "List Friends",
        "description": "The API allows to fetch friends for a given uid.",
        "operationId": "list-friends",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "uid": "superhero3",
                          "name": "Spiderman",
                          "avatar": "https://data-eu.cometchat.io/assets/images/avatars/spiderman.png",
                          "status": "offline",
                          "role": "default",
                          "createdAt": 1613132392
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "integer"
                          },
                          "conversationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "uid",
                          "name",
                          "avatar",
                          "status",
                          "role",
                          "createdAt",
                          "conversationId"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "count": {
                              "type": "integer"
                            },
                            "per_page": {
                              "type": "integer"
                            },
                            "current_page": {
                              "type": "integer"
                            },
                            "total_pages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "count",
                            "per_page",
                            "current_page",
                            "total_pages"
                          ]
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "updatedAt": {
                              "type": "integer"
                            },
                            "affix": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "updatedAt",
                            "affix"
                          ]
                        }
                      },
                      "required": [
                        "pagination",
                        "cursor"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "friends"
        ],
        "summary": "Remove Friends",
        "description": "The API removes friends for a given uid.",
        "operationId": "remove-friends",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "friends": {
                    "type": "array",
                    "description": "The array of friends to remove.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "Deleted the friend relations succussfully."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "Deleted the friend relations succussfully."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/users/{uid}/blockedusers": {
      "post": {
        "tags": [
          "Blocked Users"
        ],
        "summary": "Block User",
        "description": "Blocks the specified user",
        "operationId": "block-user",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "blockedUids"
                ],
                "properties": {
                  "blockedUids": {
                    "type": "array",
                    "description": "uids of the users to be blocked",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "superhero4": {
                          "success": true,
                          "message": "The user with UID superhero1 has blocked user with UID superhero4 successfully."
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "superhero4": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "message": {
                              "type": "string",
                              "example": "The user with UID superhero1 has blocked user with UID superhero4 successfully."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "Blocked Users"
        ],
        "summary": "UnBlock User",
        "description": "Unblocks the specified user",
        "operationId": "unblock-user",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "blockedUids"
                ],
                "properties": {
                  "blockedUids": {
                    "type": "array",
                    "description": "uids of the users to be unblock",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "superhero3": {
                          "success": true,
                          "message": "The user with UID superhero2 has unblocked user with UID superhero3 successfully."
                        },
                        "superhero4": {
                          "success": true,
                          "message": "The user with UID superhero2 has not blocked the user with UID superhero4."
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "superhero3": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "message": {
                              "type": "string",
                              "example": "The user with UID superhero2 has unblocked user with UID superhero3 successfully."
                            }
                          }
                        },
                        "superhero4": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "message": {
                              "type": "string",
                              "example": "The user with UID superhero2 has not blocked the user with UID superhero4."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Blocked Users"
        ],
        "summary": "List Blocked Users",
        "description": "Retrieves the blocked users",
        "operationId": "list-blocked-users",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of a user.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "uid": "superhero3",
                          "name": "Spiderman",
                          "avatar": "https://data.cometchat.com/assets/images/avatars/spiderman.png",
                          "status": "offline",
                          "role": "default",
                          "createdAt": 1561440316,
                          "createdBy": "Migration",
                          "blockedByMe": true
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 1,
                          "count": 1,
                          "per_page": 100,
                          "current_page": 1,
                          "total_pages": 1
                        },
                        "cursor": {
                          "createdAt": 1561440318,
                          "affix": "prepend"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "example": "superhero3"
                          },
                          "name": {
                            "type": "string",
                            "example": "Spiderman"
                          },
                          "avatar": {
                            "type": "string",
                            "example": "https://data.cometchat.com/assets/images/avatars/spiderman.png"
                          },
                          "status": {
                            "type": "string",
                            "example": "offline"
                          },
                          "role": {
                            "type": "string",
                            "example": "default"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1561440316,
                            "default": 0
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "Migration"
                          },
                          "blockedByMe": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 100,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "createdAt": {
                              "type": "integer",
                              "example": 1561440318,
                              "default": 0
                            },
                            "affix": {
                              "type": "string",
                              "example": "prepend"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Send Message",
        "description": "Sends Message on behalf of a user.",
        "operationId": "send-messages",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiver": {
                    "type": "string",
                    "description": "The receiver of the message."
                  },
                  "receiverType": {
                    "type": "string",
                    "description": "The receiverType of the message. either user or group"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of the message. The available categories are message and custom.",
                    "default": "message"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the message. The available values are text, image, file, audio, video.",
                    "default": "text"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON containing message attributes.",
                    "default": "{\"text\": \"Hi Tom!\", \"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}",
                    "format": "json"
                  },
                  "multipleReceivers": {
                    "type": "string",
                    "description": "JSON containing array of uids and guids for whom the message must be sent.      Format for multiple receivers - {\"uids\": [\"uid1\",\"uid2\"], \"guids\":[\"guid1\"]}",
                    "format": "json"
                  },
                  "tags": {
                    "type": "array",
                    "description": "A list of tags to identify specific messages.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "id": "35",
                        "sender": "superhero1",
                        "receiverType": "user",
                        "receiver": "superhero4",
                        "category": "message",
                        "type": "text",
                        "data": {
                          "text": "Hello World",
                          "entities": {
                            "sender": {
                              "entity": {
                                "uid": "superhero1",
                                "name": "Version 2 Check",
                                "avatar": "http://data.cometchat.com.s3-eu-west-1.amazonaws.com/assets/images/avatars/spiderman.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561440316,
                                "createdBy": "Migration",
                                "updatedAt": 1561440779,
                                "updatedBy": "588779ba2c7750c2b3193bbfabf14ad650760c1c"
                              },
                              "entityType": "user"
                            },
                            "receiver": {
                              "entity": {
                                "uid": "superhero4",
                                "name": "Wolverine",
                                "avatar": "https://data.cometchat.com/assets/images/avatars/wolverine.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561440317,
                                "createdBy": "Migration"
                              },
                              "entityType": "user"
                            }
                          }
                        },
                        "sentAt": 1561452785
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "35"
                        },
                        "sender": {
                          "type": "string",
                          "example": "superhero1"
                        },
                        "receiverType": {
                          "type": "string",
                          "example": "user"
                        },
                        "receiver": {
                          "type": "string",
                          "example": "superhero4"
                        },
                        "category": {
                          "type": "string",
                          "example": "message"
                        },
                        "type": {
                          "type": "string",
                          "example": "text"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "Hello World"
                            },
                            "entities": {
                              "type": "object",
                              "properties": {
                                "sender": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero1"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Version 2 Check"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "http://data.cometchat.com.s3-eu-west-1.amazonaws.com/assets/images/avatars/spiderman.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561440316,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        },
                                        "updatedAt": {
                                          "type": "integer",
                                          "example": 1561440779,
                                          "default": 0
                                        },
                                        "updatedBy": {
                                          "type": "string",
                                          "example": "588779ba2c7750c2b3193bbfabf14ad650760c1c"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                },
                                "receiver": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero4"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Wolverine"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data.cometchat.com/assets/images/avatars/wolverine.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561440317,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sentAt": {
                          "type": "integer",
                          "example": 1561452785,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "List Messages",
        "description": "Fetches the messages list.",
        "operationId": "list-messages",
        "parameters": [
          {
            "name": "searchKey",
            "in": "query",
            "description": "Retrieves messages containing the searchKey.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiverType",
            "in": "query",
            "description": "Displays messages based on receiverType (user/group)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affix",
            "in": "query",
            "description": "Determines whether to pull the messages either before or after any message id. Possible values are append(after) and prepend(before).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Retrieves all those messages after the passed id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters messages by category. Possible values: message, action and custom.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filters messages by type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hideDeleted",
            "in": "query",
            "description": "Hides deleted messages from List.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "onlyDeleted",
            "in": "query",
            "description": "Includes only deleted messages in List.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sentAt",
            "in": "query",
            "description": "Fetches the messages list after a particular sentAt timestamp.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records to fetch. Minimum value: 1, Maximum value: 1000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "conversationId",
            "in": "query",
            "description": "Fetches all the messages belong to a particular conversation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withTags",
            "in": "query",
            "description": "Includes those messages that have tags.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Fetches those messages that have these tags.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Fetches messages based on multiple categories.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Fetches messages based on multiple types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "conversationId": "superhero2_user_superhero3",
                          "sender": "superhero2",
                          "receiverType": "user",
                          "receiver": "superhero3",
                          "category": "message",
                          "type": "text",
                          "data": {
                            "text": "Hello, How are you?",
                            "entities": {
                              "sender": {
                                "entity": {
                                  "uid": "superhero2",
                                  "name": "Captain America",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png",
                                  "status": "offline"
                                },
                                "entityType": "user"
                              },
                              "receiver": {
                                "entity": {
                                  "uid": "superhero3",
                                  "name": "Spiderman",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/spiderman.png",
                                  "status": "offline"
                                },
                                "entityType": "user"
                              }
                            }
                          },
                          "sentAt": 1594202162,
                          "updatedAt": 1594202162
                        },
                        {
                          "id": "2",
                          "conversationId": "superhero2_user_superhero3",
                          "sender": "superhero2",
                          "receiverType": "user",
                          "receiver": "superhero3",
                          "category": "message",
                          "type": "text",
                          "data": {
                            "text": "Hi",
                            "entities": {
                              "sender": {
                                "entity": {
                                  "uid": "superhero2",
                                  "name": "Captain America",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png",
                                  "status": "offline"
                                },
                                "entityType": "user"
                              },
                              "receiver": {
                                "entity": {
                                  "uid": "superhero3",
                                  "name": "Spiderman",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/spiderman.png",
                                  "status": "offline"
                                },
                                "entityType": "user"
                              }
                            }
                          },
                          "sentAt": 1594202212,
                          "updatedAt": 1594202212
                        },
                        {
                          "id": "3",
                          "conversationId": "superhero2_user_superhero3",
                          "sender": "superhero2",
                          "receiverType": "user",
                          "receiver": "superhero3",
                          "category": "message",
                          "type": "text",
                          "data": {
                            "text": "Hello everyone",
                            "entities": {
                              "sender": {
                                "entity": {
                                  "uid": "superhero2",
                                  "name": "Captain America",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png",
                                  "status": "offline"
                                },
                                "entityType": "user"
                              },
                              "receiver": {
                                "entity": {
                                  "uid": "superhero3",
                                  "name": "Spiderman",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/spiderman.png",
                                  "status": "offline"
                                },
                                "entityType": "user"
                              }
                            }
                          },
                          "sentAt": 1594202235,
                          "updatedAt": 1594202235
                        }
                      ],
                      "meta": {
                        "previous": {
                          "affix": "prepend",
                          "sentAt": 1605164654,
                          "id": "3"
                        },
                        "current": {
                          "limit": 3,
                          "count": 3
                        },
                        "next": {
                          "affix": "append",
                          "sentAt": 1594743643,
                          "id": "3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get Message",
        "description": "Fetches the details of a message.",
        "operationId": "get-message",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message whose details are to be fetched.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "id": "1",
                        "conversationId": "superhero2_user_superhero3",
                        "sender": "superhero2",
                        "receiverType": "user",
                        "receiver": "superhero3",
                        "category": "message",
                        "type": "text",
                        "data": {
                          "text": "Hello, How are you?",
                          "entities": {
                            "sender": {
                              "entity": {
                                "uid": "superhero2",
                                "name": "Captain America",
                                "role": "default",
                                "avatar": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png",
                                "status": "offline"
                              },
                              "entityType": "user"
                            },
                            "receiver": {
                              "entity": {
                                "uid": "superhero3",
                                "name": "Spiderman",
                                "role": "default",
                                "avatar": "https://data-us.cometchat.io/assets/images/avatars/spiderman.png",
                                "status": "offline"
                              },
                              "entityType": "user"
                            }
                          }
                        },
                        "sentAt": 1594202162,
                        "updatedAt": 1594202162
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "conversationId": {
                          "type": "string",
                          "example": "superhero2_user_superhero3"
                        },
                        "sender": {
                          "type": "string",
                          "example": "superhero2"
                        },
                        "receiverType": {
                          "type": "string",
                          "example": "user"
                        },
                        "receiver": {
                          "type": "string",
                          "example": "superhero3"
                        },
                        "category": {
                          "type": "string",
                          "example": "message"
                        },
                        "type": {
                          "type": "string",
                          "example": "text"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "Hello, How are you?"
                            },
                            "entities": {
                              "type": "object",
                              "properties": {
                                "sender": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero2"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Captain America"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                },
                                "receiver": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero3"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Spiderman"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data-us.cometchat.io/assets/images/avatars/spiderman.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sentAt": {
                          "type": "integer",
                          "example": 1594202162,
                          "default": 0
                        },
                        "updatedAt": {
                          "type": "integer",
                          "example": 1594202162,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "messages"
        ],
        "summary": "Update Message",
        "description": "Edits the message on behalf of a user.",
        "operationId": "user-editmessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "The data that needs to be modified."
                  },
                  "passthrough": {
                    "type": "string",
                    "description": "Optional parameter."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "id": "36",
                        "sender": "superhero1",
                        "receiverType": "user",
                        "receiver": "superhero3",
                        "category": "action",
                        "type": "message",
                        "data": {
                          "action": "edited",
                          "entities": {
                            "by": {
                              "entity": {
                                "uid": "superhero1",
                                "name": "Iron Man",
                                "avatar": "https://data.cometchat.com/assets/images/avatars/ironman.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561470148,
                                "createdBy": "Migration"
                              },
                              "entityType": "user"
                            },
                            "for": {
                              "entity": {
                                "uid": "superhero3",
                                "name": "Spiderman",
                                "avatar": "https://data.cometchat.com/assets/images/avatars/spiderman.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561470149,
                                "createdBy": "Migration"
                              },
                              "entityType": "user"
                            },
                            "on": {
                              "entity": {
                                "id": "35",
                                "sender": "superhero1",
                                "receiverType": "user",
                                "receiver": "superhero3",
                                "category": "message",
                                "type": "text",
                                "data": {
                                  "text": "Hello Cometchat",
                                  "entities": {
                                    "sender": {
                                      "entity": {
                                        "uid": "superhero1",
                                        "name": "Iron Man",
                                        "role": "default",
                                        "avatar": "https://data.cometchat.com/assets/images/avatars/ironman.png",
                                        "status": "offline",
                                        "createdAt": 1561470148,
                                        "createdBy": "Migration"
                                      },
                                      "entityType": "user"
                                    },
                                    "receiver": {
                                      "entity": {
                                        "uid": "superhero3",
                                        "name": "Spiderman",
                                        "role": "default",
                                        "avatar": "https://data.cometchat.com/assets/images/avatars/spiderman.png",
                                        "status": "offline",
                                        "createdAt": 1561470149,
                                        "createdBy": "Migration"
                                      },
                                      "entityType": "user"
                                    }
                                  }
                                },
                                "sentAt": 1561479899,
                                "editedAt": 1561479927,
                                "editedBy": "superhero1",
                                "receipts": {
                                  "data": [
                                    {}
                                  ]
                                }
                              },
                              "entityType": "message"
                            }
                          }
                        },
                        "sentAt": 1561479930
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "36"
                        },
                        "sender": {
                          "type": "string",
                          "example": "superhero1"
                        },
                        "receiverType": {
                          "type": "string",
                          "example": "user"
                        },
                        "receiver": {
                          "type": "string",
                          "example": "superhero3"
                        },
                        "category": {
                          "type": "string",
                          "example": "action"
                        },
                        "type": {
                          "type": "string",
                          "example": "message"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string",
                              "example": "edited"
                            },
                            "entities": {
                              "type": "object",
                              "properties": {
                                "by": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero1"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Iron Man"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data.cometchat.com/assets/images/avatars/ironman.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561470148,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                },
                                "for": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero3"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Spiderman"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data.cometchat.com/assets/images/avatars/spiderman.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561470149,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                },
                                "on": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "35"
                                        },
                                        "sender": {
                                          "type": "string",
                                          "example": "superhero1"
                                        },
                                        "receiverType": {
                                          "type": "string",
                                          "example": "user"
                                        },
                                        "receiver": {
                                          "type": "string",
                                          "example": "superhero3"
                                        },
                                        "category": {
                                          "type": "string",
                                          "example": "message"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "text"
                                        },
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "text": {
                                              "type": "string",
                                              "example": "Hello Cometchat"
                                            },
                                            "entities": {
                                              "type": "object",
                                              "properties": {
                                                "sender": {
                                                  "type": "object",
                                                  "properties": {
                                                    "entity": {
                                                      "type": "object",
                                                      "properties": {
                                                        "uid": {
                                                          "type": "string",
                                                          "example": "superhero1"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "example": "Iron Man"
                                                        },
                                                        "role": {
                                                          "type": "string",
                                                          "example": "default"
                                                        },
                                                        "avatar": {
                                                          "type": "string",
                                                          "example": "https://data.cometchat.com/assets/images/avatars/ironman.png"
                                                        },
                                                        "status": {
                                                          "type": "string",
                                                          "example": "offline"
                                                        },
                                                        "createdAt": {
                                                          "type": "integer",
                                                          "example": 1561470148,
                                                          "default": 0
                                                        },
                                                        "createdBy": {
                                                          "type": "string",
                                                          "example": "Migration"
                                                        }
                                                      }
                                                    },
                                                    "entityType": {
                                                      "type": "string",
                                                      "example": "user"
                                                    }
                                                  }
                                                },
                                                "receiver": {
                                                  "type": "object",
                                                  "properties": {
                                                    "entity": {
                                                      "type": "object",
                                                      "properties": {
                                                        "uid": {
                                                          "type": "string",
                                                          "example": "superhero3"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "example": "Spiderman"
                                                        },
                                                        "role": {
                                                          "type": "string",
                                                          "example": "default"
                                                        },
                                                        "avatar": {
                                                          "type": "string",
                                                          "example": "https://data.cometchat.com/assets/images/avatars/spiderman.png"
                                                        },
                                                        "status": {
                                                          "type": "string",
                                                          "example": "offline"
                                                        },
                                                        "createdAt": {
                                                          "type": "integer",
                                                          "example": 1561470149,
                                                          "default": 0
                                                        },
                                                        "createdBy": {
                                                          "type": "string",
                                                          "example": "Migration"
                                                        }
                                                      }
                                                    },
                                                    "entityType": {
                                                      "type": "string",
                                                      "example": "user"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "sentAt": {
                                          "type": "integer",
                                          "example": 1561479899,
                                          "default": 0
                                        },
                                        "editedAt": {
                                          "type": "integer",
                                          "example": 1561479927,
                                          "default": 0
                                        },
                                        "editedBy": {
                                          "type": "string",
                                          "example": "superhero1"
                                        },
                                        "receipts": {
                                          "type": "object",
                                          "properties": {
                                            "data": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {}
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "message"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sentAt": {
                          "type": "integer",
                          "example": 1561479930,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "Delete Message",
        "description": "Deletes the message.",
        "operationId": "delete-message",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "An id of the message.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permanent": {
                    "type": "boolean",
                    "description": "Deletes the message permanently.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "id": "39",
                        "sender": "superhero1",
                        "receiverType": "user",
                        "receiver": "superhero3",
                        "category": "action",
                        "type": "message",
                        "data": {
                          "action": "deleted",
                          "entities": {
                            "by": {
                              "entity": {
                                "uid": "superhero1",
                                "name": "Iron Man",
                                "avatar": "https://data.cometchat.com/assets/images/avatars/ironman.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561470148,
                                "createdBy": "Migration"
                              },
                              "entityType": "user"
                            },
                            "for": {
                              "entity": {
                                "uid": "superhero3",
                                "name": "Spiderman",
                                "avatar": "https://data.cometchat.com/assets/images/avatars/spiderman.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561470149,
                                "createdBy": "Migration"
                              },
                              "entityType": "user"
                            },
                            "on": {
                              "entity": {
                                "id": "38",
                                "sender": "superhero1",
                                "receiverType": "user",
                                "receiver": "superhero3",
                                "category": "message",
                                "type": "text",
                                "data": {
                                  "data": {
                                    "text": "Hello World"
                                  },
                                  "type": "text",
                                  "sender": "superhero1",
                                  "category": "message",
                                  "entities": {
                                    "sender": {
                                      "entity": {
                                        "uid": "superhero1",
                                        "name": "Iron Man",
                                        "role": "default",
                                        "avatar": "https://data.cometchat.com/assets/images/avatars/ironman.png",
                                        "status": "offline",
                                        "createdAt": 1561470148,
                                        "createdBy": "Migration"
                                      },
                                      "entityType": "user"
                                    },
                                    "receiver": {
                                      "entity": {
                                        "uid": "superhero3",
                                        "name": "Spiderman",
                                        "role": "default",
                                        "avatar": "https://data.cometchat.com/assets/images/avatars/spiderman.png",
                                        "status": "offline",
                                        "createdAt": 1561470149,
                                        "createdBy": "Migration"
                                      },
                                      "entityType": "user"
                                    }
                                  },
                                  "receiver": "superhero3",
                                  "receiverType": "user"
                                },
                                "sentAt": 1561480121,
                                "deletedAt": 1561480137,
                                "deletedBy": "superhero1"
                              },
                              "entityType": "message"
                            }
                          }
                        },
                        "sentAt": 1561480140
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "39"
                        },
                        "sender": {
                          "type": "string",
                          "example": "superhero1"
                        },
                        "receiverType": {
                          "type": "string",
                          "example": "user"
                        },
                        "receiver": {
                          "type": "string",
                          "example": "superhero3"
                        },
                        "category": {
                          "type": "string",
                          "example": "action"
                        },
                        "type": {
                          "type": "string",
                          "example": "message"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string",
                              "example": "deleted"
                            },
                            "entities": {
                              "type": "object",
                              "properties": {
                                "by": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero1"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Iron Man"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data.cometchat.com/assets/images/avatars/ironman.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561470148,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                },
                                "for": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero3"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Spiderman"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data.cometchat.com/assets/images/avatars/spiderman.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561470149,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                },
                                "on": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "38"
                                        },
                                        "sender": {
                                          "type": "string",
                                          "example": "superhero1"
                                        },
                                        "receiverType": {
                                          "type": "string",
                                          "example": "user"
                                        },
                                        "receiver": {
                                          "type": "string",
                                          "example": "superhero3"
                                        },
                                        "category": {
                                          "type": "string",
                                          "example": "message"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "text"
                                        },
                                        "data": {
                                          "type": "object",
                                          "properties": {
                                            "data": {
                                              "type": "object",
                                              "properties": {
                                                "text": {
                                                  "type": "string",
                                                  "example": "Hello World"
                                                }
                                              }
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "text"
                                            },
                                            "sender": {
                                              "type": "string",
                                              "example": "superhero1"
                                            },
                                            "category": {
                                              "type": "string",
                                              "example": "message"
                                            },
                                            "entities": {
                                              "type": "object",
                                              "properties": {
                                                "sender": {
                                                  "type": "object",
                                                  "properties": {
                                                    "entity": {
                                                      "type": "object",
                                                      "properties": {
                                                        "uid": {
                                                          "type": "string",
                                                          "example": "superhero1"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "example": "Iron Man"
                                                        },
                                                        "role": {
                                                          "type": "string",
                                                          "example": "default"
                                                        },
                                                        "avatar": {
                                                          "type": "string",
                                                          "example": "https://data.cometchat.com/assets/images/avatars/ironman.png"
                                                        },
                                                        "status": {
                                                          "type": "string",
                                                          "example": "offline"
                                                        },
                                                        "createdAt": {
                                                          "type": "integer",
                                                          "example": 1561470148,
                                                          "default": 0
                                                        },
                                                        "createdBy": {
                                                          "type": "string",
                                                          "example": "Migration"
                                                        }
                                                      }
                                                    },
                                                    "entityType": {
                                                      "type": "string",
                                                      "example": "user"
                                                    }
                                                  }
                                                },
                                                "receiver": {
                                                  "type": "object",
                                                  "properties": {
                                                    "entity": {
                                                      "type": "object",
                                                      "properties": {
                                                        "uid": {
                                                          "type": "string",
                                                          "example": "superhero3"
                                                        },
                                                        "name": {
                                                          "type": "string",
                                                          "example": "Spiderman"
                                                        },
                                                        "role": {
                                                          "type": "string",
                                                          "example": "default"
                                                        },
                                                        "avatar": {
                                                          "type": "string",
                                                          "example": "https://data.cometchat.com/assets/images/avatars/spiderman.png"
                                                        },
                                                        "status": {
                                                          "type": "string",
                                                          "example": "offline"
                                                        },
                                                        "createdAt": {
                                                          "type": "integer",
                                                          "example": 1561470149,
                                                          "default": 0
                                                        },
                                                        "createdBy": {
                                                          "type": "string",
                                                          "example": "Migration"
                                                        }
                                                      }
                                                    },
                                                    "entityType": {
                                                      "type": "string",
                                                      "example": "user"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "receiver": {
                                              "type": "string",
                                              "example": "superhero3"
                                            },
                                            "receiverType": {
                                              "type": "string",
                                              "example": "user"
                                            }
                                          }
                                        },
                                        "sentAt": {
                                          "type": "integer",
                                          "example": 1561480121,
                                          "default": 0
                                        },
                                        "deletedAt": {
                                          "type": "integer",
                                          "example": 1561480137,
                                          "default": 0
                                        },
                                        "deletedBy": {
                                          "type": "string",
                                          "example": "superhero1"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "message"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sentAt": {
                          "type": "integer",
                          "example": 1561480140,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/group/{guid}/messages": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get Group Messages",
        "description": "Fetches the group message list for a user.",
        "operationId": "user-listgroupmessages",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "An unique identifier of the group.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "searches for occurence of message.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unread",
            "in": "query",
            "description": "displays all the unread messages of the user.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "undelivered",
            "in": "query",
            "description": "displays all the messages those are undelivered.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "displays the count of messages as per group/user",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hideMessagesFromBlockedUsers",
            "in": "query",
            "description": "Hides the messages from blocked users in group.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affix",
            "in": "query",
            "description": "Determines whether to pull the messages either before or after any message id. Possible values are append(after) and prepend(before).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Retrieves all those messages after the passed id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Fetches messages that belongs to specific category.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Fetches messages that contains multiple categories.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Fetches messages that belongs to a specific type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Fetches messages with multiple types.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "id": "57",
                          "conversationId": "group_supergroup",
                          "sender": "superhero1",
                          "receiverType": "group",
                          "receiver": "supergroup",
                          "category": "action",
                          "type": "groupMember",
                          "data": {
                            "action": "added",
                            "entities": {
                              "by": {
                                "entity": {
                                  "uid": "superhero1",
                                  "name": "Iron Man",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/ironman.png",
                                  "status": "offline",
                                  "createdAt": 1629869270,
                                  "updatedAt": 1630308875
                                },
                                "entityType": "user"
                              },
                              "on": {
                                "entity": {
                                  "uid": "superhero3",
                                  "link": "https://data-us.cometchat.io/assets",
                                  "name": "Captain America",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png",
                                  "status": "offline",
                                  "createdAt": 1629869270,
                                  "updatedAt": 1629964825,
                                  "conversationId": "superhero1_user_superhero3"
                                },
                                "entityType": "user"
                              },
                              "for": {
                                "entity": {
                                  "guid": "supergroup",
                                  "icon": "https://data-us.cometchat.io/assets/images/avatars/supergroup.png",
                                  "name": "Comic Heros' Hangout",
                                  "type": "public",
                                  "owner": "superhero1",
                                  "createdAt": 1629869270,
                                  "updatedAt": 1630308875,
                                  "membersCount": 3,
                                  "conversationId": "group_supergroup"
                                },
                                "entityType": "group"
                              }
                            }
                          },
                          "sentAt": 1630504645,
                          "updatedAt": 1630504645
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 0,
                          "count": 1,
                          "per_page": 100,
                          "current_page": 1,
                          "total_pages": 1
                        },
                        "cursor": {
                          "id": 57,
                          "affix": "prepend"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "57"
                          },
                          "conversationId": {
                            "type": "string",
                            "example": "group_supergroup"
                          },
                          "sender": {
                            "type": "string",
                            "example": "superhero1"
                          },
                          "receiverType": {
                            "type": "string",
                            "example": "group"
                          },
                          "receiver": {
                            "type": "string",
                            "example": "supergroup"
                          },
                          "category": {
                            "type": "string",
                            "example": "action"
                          },
                          "type": {
                            "type": "string",
                            "example": "groupMember"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "type": "string",
                                "example": "added"
                              },
                              "entities": {
                                "type": "object",
                                "properties": {
                                  "by": {
                                    "type": "object",
                                    "properties": {
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "uid": {
                                            "type": "string",
                                            "example": "superhero1"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Iron Man"
                                          },
                                          "role": {
                                            "type": "string",
                                            "example": "default"
                                          },
                                          "avatar": {
                                            "type": "string",
                                            "example": "https://data-us.cometchat.io/assets/images/avatars/ironman.png"
                                          },
                                          "status": {
                                            "type": "string",
                                            "example": "offline"
                                          },
                                          "createdAt": {
                                            "type": "integer",
                                            "example": 1629869270,
                                            "default": 0
                                          },
                                          "updatedAt": {
                                            "type": "integer",
                                            "example": 1630308875,
                                            "default": 0
                                          }
                                        }
                                      },
                                      "entityType": {
                                        "type": "string",
                                        "example": "user"
                                      }
                                    }
                                  },
                                  "on": {
                                    "type": "object",
                                    "properties": {
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "uid": {
                                            "type": "string",
                                            "example": "superhero3"
                                          },
                                          "link": {
                                            "type": "string",
                                            "example": "https://data-us.cometchat.io/assets"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Captain America"
                                          },
                                          "role": {
                                            "type": "string",
                                            "example": "default"
                                          },
                                          "avatar": {
                                            "type": "string",
                                            "example": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png"
                                          },
                                          "status": {
                                            "type": "string",
                                            "example": "offline"
                                          },
                                          "createdAt": {
                                            "type": "integer",
                                            "example": 1629869270,
                                            "default": 0
                                          },
                                          "updatedAt": {
                                            "type": "integer",
                                            "example": 1629964825,
                                            "default": 0
                                          },
                                          "conversationId": {
                                            "type": "string",
                                            "example": "superhero1_user_superhero3"
                                          }
                                        }
                                      },
                                      "entityType": {
                                        "type": "string",
                                        "example": "user"
                                      }
                                    }
                                  },
                                  "for": {
                                    "type": "object",
                                    "properties": {
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "guid": {
                                            "type": "string",
                                            "example": "supergroup"
                                          },
                                          "icon": {
                                            "type": "string",
                                            "example": "https://data-us.cometchat.io/assets/images/avatars/supergroup.png"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Comic Heros' Hangout"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "public"
                                          },
                                          "owner": {
                                            "type": "string",
                                            "example": "superhero1"
                                          },
                                          "createdAt": {
                                            "type": "integer",
                                            "example": 1629869270,
                                            "default": 0
                                          },
                                          "updatedAt": {
                                            "type": "integer",
                                            "example": 1630308875,
                                            "default": 0
                                          },
                                          "membersCount": {
                                            "type": "integer",
                                            "example": 3,
                                            "default": 0
                                          },
                                          "conversationId": {
                                            "type": "string",
                                            "example": "group_supergroup"
                                          }
                                        }
                                      },
                                      "entityType": {
                                        "type": "string",
                                        "example": "group"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "sentAt": {
                            "type": "integer",
                            "example": 1630504645,
                            "default": 0
                          },
                          "updatedAt": {
                            "type": "integer",
                            "example": 1630504645,
                            "default": 0
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 100,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 57,
                              "default": 0
                            },
                            "affix": {
                              "type": "string",
                              "example": "prepend"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/bots/{uid}/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Send Bot Message",
        "description": "Sends Message from a Bot.",
        "operationId": "send-bot-message",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "An uid of the Bot.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiver": {
                    "type": "string",
                    "description": "The receiver of the message."
                  },
                  "receiverType": {
                    "type": "string",
                    "description": "The receiverType of the message. either user or group"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of the message. The available categories are message and custom.",
                    "default": "message"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the message. The available values are text, image, file, audio, video.",
                    "default": "text"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON containing message attributes.",
                    "default": "{\"text\": \"Hi Tom!\", \"metadata\":{\"key1\":\"value1\",\"key2\":\"value2\"}}",
                    "format": "json"
                  },
                  "multipleReceivers": {
                    "type": "string",
                    "description": "JSON containing array of uids and guids for whom the message must be sent.      Format for multiple receivers - {\"uids\": [\"uid1\",\"uid2\"], \"guids\":[\"guid1\"]}",
                    "format": "json"
                  },
                  "tags": {
                    "type": "array",
                    "description": "A list of tags to identify specific messages.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "id": "35",
                        "sender": "superhero1",
                        "receiverType": "user",
                        "receiver": "superhero4",
                        "category": "message",
                        "type": "text",
                        "data": {
                          "text": "Hello World",
                          "entities": {
                            "sender": {
                              "entity": {
                                "uid": "superhero1",
                                "name": "Version 2 Check",
                                "avatar": "http://data.cometchat.com.s3-eu-west-1.amazonaws.com/assets/images/avatars/spiderman.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561440316,
                                "createdBy": "Migration",
                                "updatedAt": 1561440779,
                                "updatedBy": "588779ba2c7750c2b3193bbfabf14ad650760c1c"
                              },
                              "entityType": "user"
                            },
                            "receiver": {
                              "entity": {
                                "uid": "superhero4",
                                "name": "Wolverine",
                                "avatar": "https://data.cometchat.com/assets/images/avatars/wolverine.png",
                                "status": "offline",
                                "role": "default",
                                "createdAt": 1561440317,
                                "createdBy": "Migration"
                              },
                              "entityType": "user"
                            }
                          }
                        },
                        "sentAt": 1561452785
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "35"
                        },
                        "sender": {
                          "type": "string",
                          "example": "superhero1"
                        },
                        "receiverType": {
                          "type": "string",
                          "example": "user"
                        },
                        "receiver": {
                          "type": "string",
                          "example": "superhero4"
                        },
                        "category": {
                          "type": "string",
                          "example": "message"
                        },
                        "type": {
                          "type": "string",
                          "example": "text"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "Hello World"
                            },
                            "entities": {
                              "type": "object",
                              "properties": {
                                "sender": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero1"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Version 2 Check"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "http://data.cometchat.com.s3-eu-west-1.amazonaws.com/assets/images/avatars/spiderman.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561440316,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        },
                                        "updatedAt": {
                                          "type": "integer",
                                          "example": 1561440779,
                                          "default": 0
                                        },
                                        "updatedBy": {
                                          "type": "string",
                                          "example": "588779ba2c7750c2b3193bbfabf14ad650760c1c"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                },
                                "receiver": {
                                  "type": "object",
                                  "properties": {
                                    "entity": {
                                      "type": "object",
                                      "properties": {
                                        "uid": {
                                          "type": "string",
                                          "example": "superhero4"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Wolverine"
                                        },
                                        "avatar": {
                                          "type": "string",
                                          "example": "https://data.cometchat.com/assets/images/avatars/wolverine.png"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "offline"
                                        },
                                        "role": {
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "createdAt": {
                                          "type": "integer",
                                          "example": 1561440317,
                                          "default": 0
                                        },
                                        "createdBy": {
                                          "type": "string",
                                          "example": "Migration"
                                        }
                                      }
                                    },
                                    "entityType": {
                                      "type": "string",
                                      "example": "user"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sentAt": {
                          "type": "integer",
                          "example": 1561452785,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/conversations": {
      "get": {
        "tags": [
          "conversations"
        ],
        "summary": "List Conversations",
        "description": "",
        "operationId": "list-conversations",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationType",
            "in": "query",
            "description": "Retrieves only the specified conversation type (user and group) while fetching conversations list.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": [
                        {
                          "conversationId": "group_project-group",
                          "conversationType": "group",
                          "unreadMessageCount": "0",
                          "createdAt": 1630071782,
                          "updatedAt": 1630481413,
                          "lastMessage": {
                            "id": "50",
                            "conversationId": "group_project-group",
                            "sender": "superhero4",
                            "receiverType": "group",
                            "receiver": "project-group",
                            "category": "action",
                            "type": "groupMember",
                            "data": {
                              "action": "unbanned",
                              "entities": {
                                "by": {
                                  "entity": {
                                    "uid": "superhero4",
                                    "name": "Wolverine",
                                    "role": "default",
                                    "avatar": "https://data-us.cometchat.io/assets/images/avatars/wolverine.png",
                                    "status": "offline",
                                    "createdAt": 1629869270
                                  },
                                  "entityType": "user"
                                },
                                "on": {
                                  "entity": {
                                    "uid": "superhero3",
                                    "link": "https://data-us.cometchat.io/assets",
                                    "name": "Captain America",
                                    "role": "default",
                                    "avatar": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png",
                                    "status": "offline",
                                    "createdAt": 1629869270,
                                    "updatedAt": 1629964825,
                                    "conversationId": "superhero3_user_superhero4"
                                  },
                                  "entityType": "user"
                                },
                                "for": {
                                  "entity": {
                                    "guid": "project-group",
                                    "icon": "http://placehold.it/120x120&text=image1",
                                    "name": "Project Group1",
                                    "type": "private",
                                    "owner": "superhero4",
                                    "createdAt": 1630071341,
                                    "updatedAt": 1630305525,
                                    "updatedBy": "superhero4",
                                    "description": "project related discussions between members",
                                    "membersCount": 4,
                                    "conversationId": "group_project-group"
                                  },
                                  "entityType": "group"
                                }
                              }
                            },
                            "sentAt": 1630305562,
                            "updatedAt": 1630305562,
                            "receipts": {
                              "data": [
                                {}
                              ]
                            }
                          },
                          "conversationWith": {
                            "guid": "project-group",
                            "name": "Project Group1",
                            "description": "project related discussions between members",
                            "icon": "http://placehold.it/120x120&text=image1",
                            "type": "private",
                            "scope": "participant",
                            "membersCount": 4,
                            "joinedAt": 1630071782,
                            "conversationId": "group_project-group",
                            "hasJoined": true,
                            "wsChannel": {
                              "identity": "[192562a02310ac0a]project-group",
                              "secret": "6d4a5e4c65e63f9d0e095816a7fa1bc29370c18c",
                              "service": "192562a02310ac0a"
                            },
                            "createdAt": 1630071341,
                            "owner": "superhero4",
                            "updatedAt": 1630308875,
                            "updatedBy": "superhero4"
                          }
                        }
                      ],
                      "meta": {
                        "pagination": {
                          "total": 1,
                          "count": 1,
                          "per_page": 100,
                          "current_page": 1,
                          "total_pages": 1
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "conversationId": {
                            "type": "string",
                            "example": "group_project-group"
                          },
                          "conversationType": {
                            "type": "string",
                            "example": "group"
                          },
                          "unreadMessageCount": {
                            "type": "string",
                            "example": "0"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1630071782,
                            "default": 0
                          },
                          "updatedAt": {
                            "type": "integer",
                            "example": 1630481413,
                            "default": 0
                          },
                          "lastMessage": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "50"
                              },
                              "conversationId": {
                                "type": "string",
                                "example": "group_project-group"
                              },
                              "sender": {
                                "type": "string",
                                "example": "superhero4"
                              },
                              "receiverType": {
                                "type": "string",
                                "example": "group"
                              },
                              "receiver": {
                                "type": "string",
                                "example": "project-group"
                              },
                              "category": {
                                "type": "string",
                                "example": "action"
                              },
                              "type": {
                                "type": "string",
                                "example": "groupMember"
                              },
                              "data": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "string",
                                    "example": "unbanned"
                                  },
                                  "entities": {
                                    "type": "object",
                                    "properties": {
                                      "by": {
                                        "type": "object",
                                        "properties": {
                                          "entity": {
                                            "type": "object",
                                            "properties": {
                                              "uid": {
                                                "type": "string",
                                                "example": "superhero4"
                                              },
                                              "name": {
                                                "type": "string",
                                                "example": "Wolverine"
                                              },
                                              "role": {
                                                "type": "string",
                                                "example": "default"
                                              },
                                              "avatar": {
                                                "type": "string",
                                                "example": "https://data-us.cometchat.io/assets/images/avatars/wolverine.png"
                                              },
                                              "status": {
                                                "type": "string",
                                                "example": "offline"
                                              },
                                              "createdAt": {
                                                "type": "integer",
                                                "example": 1629869270,
                                                "default": 0
                                              }
                                            }
                                          },
                                          "entityType": {
                                            "type": "string",
                                            "example": "user"
                                          }
                                        }
                                      },
                                      "on": {
                                        "type": "object",
                                        "properties": {
                                          "entity": {
                                            "type": "object",
                                            "properties": {
                                              "uid": {
                                                "type": "string",
                                                "example": "superhero3"
                                              },
                                              "link": {
                                                "type": "string",
                                                "example": "https://data-us.cometchat.io/assets"
                                              },
                                              "name": {
                                                "type": "string",
                                                "example": "Captain America"
                                              },
                                              "role": {
                                                "type": "string",
                                                "example": "default"
                                              },
                                              "avatar": {
                                                "type": "string",
                                                "example": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png"
                                              },
                                              "status": {
                                                "type": "string",
                                                "example": "offline"
                                              },
                                              "createdAt": {
                                                "type": "integer",
                                                "example": 1629869270,
                                                "default": 0
                                              },
                                              "updatedAt": {
                                                "type": "integer",
                                                "example": 1629964825,
                                                "default": 0
                                              },
                                              "conversationId": {
                                                "type": "string",
                                                "example": "superhero3_user_superhero4"
                                              }
                                            }
                                          },
                                          "entityType": {
                                            "type": "string",
                                            "example": "user"
                                          }
                                        }
                                      },
                                      "for": {
                                        "type": "object",
                                        "properties": {
                                          "entity": {
                                            "type": "object",
                                            "properties": {
                                              "guid": {
                                                "type": "string",
                                                "example": "project-group"
                                              },
                                              "icon": {
                                                "type": "string",
                                                "example": "http://placehold.it/120x120&text=image1"
                                              },
                                              "name": {
                                                "type": "string",
                                                "example": "Project Group1"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "private"
                                              },
                                              "owner": {
                                                "type": "string",
                                                "example": "superhero4"
                                              },
                                              "createdAt": {
                                                "type": "integer",
                                                "example": 1630071341,
                                                "default": 0
                                              },
                                              "updatedAt": {
                                                "type": "integer",
                                                "example": 1630305525,
                                                "default": 0
                                              },
                                              "updatedBy": {
                                                "type": "string",
                                                "example": "superhero4"
                                              },
                                              "description": {
                                                "type": "string",
                                                "example": "project related discussions between members"
                                              },
                                              "membersCount": {
                                                "type": "integer",
                                                "example": 4,
                                                "default": 0
                                              },
                                              "conversationId": {
                                                "type": "string",
                                                "example": "group_project-group"
                                              }
                                            }
                                          },
                                          "entityType": {
                                            "type": "string",
                                            "example": "group"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "sentAt": {
                                "type": "integer",
                                "example": 1630305562,
                                "default": 0
                              },
                              "updatedAt": {
                                "type": "integer",
                                "example": 1630305562,
                                "default": 0
                              },
                              "receipts": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {}
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "conversationWith": {
                            "type": "object",
                            "properties": {
                              "guid": {
                                "type": "string",
                                "example": "project-group"
                              },
                              "name": {
                                "type": "string",
                                "example": "Project Group1"
                              },
                              "description": {
                                "type": "string",
                                "example": "project related discussions between members"
                              },
                              "icon": {
                                "type": "string",
                                "example": "http://placehold.it/120x120&text=image1"
                              },
                              "type": {
                                "type": "string",
                                "example": "private"
                              },
                              "scope": {
                                "type": "string",
                                "example": "participant"
                              },
                              "membersCount": {
                                "type": "integer",
                                "example": 4,
                                "default": 0
                              },
                              "joinedAt": {
                                "type": "integer",
                                "example": 1630071782,
                                "default": 0
                              },
                              "conversationId": {
                                "type": "string",
                                "example": "group_project-group"
                              },
                              "hasJoined": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "wsChannel": {
                                "type": "object",
                                "properties": {
                                  "identity": {
                                    "type": "string",
                                    "example": "[192562a02310ac0a]project-group"
                                  },
                                  "secret": {
                                    "type": "string",
                                    "example": "6d4a5e4c65e63f9d0e095816a7fa1bc29370c18c"
                                  },
                                  "service": {
                                    "type": "string",
                                    "example": "192562a02310ac0a"
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "integer",
                                "example": 1630071341,
                                "default": 0
                              },
                              "owner": {
                                "type": "string",
                                "example": "superhero4"
                              },
                              "updatedAt": {
                                "type": "integer",
                                "example": 1630308875,
                                "default": 0
                              },
                              "updatedBy": {
                                "type": "string",
                                "example": "superhero4"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "count": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 100,
                              "default": 0
                            },
                            "current_page": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "total_pages": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/conversations/{conversationId}": {
      "get": {
        "tags": [
          "conversations"
        ],
        "summary": "Get Conversation",
        "description": "",
        "operationId": "get-conversations",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "(Required) conversation id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "conversationId": "group_project-group",
                        "conversationType": "group",
                        "unreadMessageCount": "0",
                        "createdAt": 1630071782,
                        "updatedAt": 1630481413,
                        "lastMessage": {
                          "id": "50",
                          "conversationId": "group_project-group",
                          "sender": "superhero4",
                          "receiverType": "group",
                          "receiver": "project-group",
                          "category": "action",
                          "type": "groupMember",
                          "data": {
                            "action": "unbanned",
                            "entities": {
                              "by": {
                                "entity": {
                                  "uid": "superhero4",
                                  "name": "Wolverine",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/wolverine.png",
                                  "status": "offline",
                                  "createdAt": 1629869270
                                },
                                "entityType": "user"
                              },
                              "on": {
                                "entity": {
                                  "uid": "superhero3",
                                  "link": "https://data-us.cometchat.io/assets",
                                  "name": "Captain America",
                                  "role": "default",
                                  "avatar": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png",
                                  "status": "offline",
                                  "createdAt": 1629869270,
                                  "updatedAt": 1629964825,
                                  "conversationId": "superhero3_user_superhero4"
                                },
                                "entityType": "user"
                              },
                              "for": {
                                "entity": {
                                  "guid": "project-group",
                                  "icon": "http://placehold.it/120x120&text=image1",
                                  "name": "Project Group1",
                                  "type": "private",
                                  "owner": "superhero4",
                                  "createdAt": 1630071341,
                                  "updatedAt": 1630305525,
                                  "updatedBy": "superhero4",
                                  "description": "project related discussions between members",
                                  "membersCount": 4,
                                  "conversationId": "group_project-group"
                                },
                                "entityType": "group"
                              }
                            }
                          },
                          "sentAt": 1630305562,
                          "updatedAt": 1630305562,
                          "receipts": {
                            "data": [
                              {}
                            ]
                          }
                        },
                        "conversationWith": {
                          "guid": "project-group",
                          "name": "Project Group1",
                          "description": "project related discussions between members",
                          "icon": "http://placehold.it/120x120&text=image1",
                          "type": "private",
                          "scope": "participant",
                          "membersCount": 4,
                          "joinedAt": 1630071782,
                          "conversationId": "group_project-group",
                          "hasJoined": true,
                          "wsChannel": {
                            "identity": "[192562a02310ac0a]project-group",
                            "secret": "6d4a5e4c65e63f9d0e095816a7fa1bc29370c18c",
                            "service": "192562a02310ac0a"
                          },
                          "createdAt": 1630071341,
                          "owner": "superhero4",
                          "updatedAt": 1630308875,
                          "updatedBy": "superhero4",
                          "tags": [
                            "project"
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "conversationId": {
                          "type": "string",
                          "example": "group_project-group"
                        },
                        "conversationType": {
                          "type": "string",
                          "example": "group"
                        },
                        "unreadMessageCount": {
                          "type": "string",
                          "example": "0"
                        },
                        "createdAt": {
                          "type": "integer",
                          "example": 1630071782,
                          "default": 0
                        },
                        "updatedAt": {
                          "type": "integer",
                          "example": 1630481413,
                          "default": 0
                        },
                        "lastMessage": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "50"
                            },
                            "conversationId": {
                              "type": "string",
                              "example": "group_project-group"
                            },
                            "sender": {
                              "type": "string",
                              "example": "superhero4"
                            },
                            "receiverType": {
                              "type": "string",
                              "example": "group"
                            },
                            "receiver": {
                              "type": "string",
                              "example": "project-group"
                            },
                            "category": {
                              "type": "string",
                              "example": "action"
                            },
                            "type": {
                              "type": "string",
                              "example": "groupMember"
                            },
                            "data": {
                              "type": "object",
                              "properties": {
                                "action": {
                                  "type": "string",
                                  "example": "unbanned"
                                },
                                "entities": {
                                  "type": "object",
                                  "properties": {
                                    "by": {
                                      "type": "object",
                                      "properties": {
                                        "entity": {
                                          "type": "object",
                                          "properties": {
                                            "uid": {
                                              "type": "string",
                                              "example": "superhero4"
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "Wolverine"
                                            },
                                            "role": {
                                              "type": "string",
                                              "example": "default"
                                            },
                                            "avatar": {
                                              "type": "string",
                                              "example": "https://data-us.cometchat.io/assets/images/avatars/wolverine.png"
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "offline"
                                            },
                                            "createdAt": {
                                              "type": "integer",
                                              "example": 1629869270,
                                              "default": 0
                                            }
                                          }
                                        },
                                        "entityType": {
                                          "type": "string",
                                          "example": "user"
                                        }
                                      }
                                    },
                                    "on": {
                                      "type": "object",
                                      "properties": {
                                        "entity": {
                                          "type": "object",
                                          "properties": {
                                            "uid": {
                                              "type": "string",
                                              "example": "superhero3"
                                            },
                                            "link": {
                                              "type": "string",
                                              "example": "https://data-us.cometchat.io/assets"
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "Captain America"
                                            },
                                            "role": {
                                              "type": "string",
                                              "example": "default"
                                            },
                                            "avatar": {
                                              "type": "string",
                                              "example": "https://data-us.cometchat.io/assets/images/avatars/captainamerica.png"
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "offline"
                                            },
                                            "createdAt": {
                                              "type": "integer",
                                              "example": 1629869270,
                                              "default": 0
                                            },
                                            "updatedAt": {
                                              "type": "integer",
                                              "example": 1629964825,
                                              "default": 0
                                            },
                                            "conversationId": {
                                              "type": "string",
                                              "example": "superhero3_user_superhero4"
                                            }
                                          }
                                        },
                                        "entityType": {
                                          "type": "string",
                                          "example": "user"
                                        }
                                      }
                                    },
                                    "for": {
                                      "type": "object",
                                      "properties": {
                                        "entity": {
                                          "type": "object",
                                          "properties": {
                                            "guid": {
                                              "type": "string",
                                              "example": "project-group"
                                            },
                                            "icon": {
                                              "type": "string",
                                              "example": "http://placehold.it/120x120&text=image1"
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "Project Group1"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "private"
                                            },
                                            "owner": {
                                              "type": "string",
                                              "example": "superhero4"
                                            },
                                            "createdAt": {
                                              "type": "integer",
                                              "example": 1630071341,
                                              "default": 0
                                            },
                                            "updatedAt": {
                                              "type": "integer",
                                              "example": 1630305525,
                                              "default": 0
                                            },
                                            "updatedBy": {
                                              "type": "string",
                                              "example": "superhero4"
                                            },
                                            "description": {
                                              "type": "string",
                                              "example": "project related discussions between members"
                                            },
                                            "membersCount": {
                                              "type": "integer",
                                              "example": 4,
                                              "default": 0
                                            },
                                            "conversationId": {
                                              "type": "string",
                                              "example": "group_project-group"
                                            }
                                          }
                                        },
                                        "entityType": {
                                          "type": "string",
                                          "example": "group"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "sentAt": {
                              "type": "integer",
                              "example": 1630305562,
                              "default": 0
                            },
                            "updatedAt": {
                              "type": "integer",
                              "example": 1630305562,
                              "default": 0
                            },
                            "receipts": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        },
                        "conversationWith": {
                          "type": "object",
                          "properties": {
                            "guid": {
                              "type": "string",
                              "example": "project-group"
                            },
                            "name": {
                              "type": "string",
                              "example": "Project Group1"
                            },
                            "description": {
                              "type": "string",
                              "example": "project related discussions between members"
                            },
                            "icon": {
                              "type": "string",
                              "example": "http://placehold.it/120x120&text=image1"
                            },
                            "type": {
                              "type": "string",
                              "example": "private"
                            },
                            "scope": {
                              "type": "string",
                              "example": "participant"
                            },
                            "membersCount": {
                              "type": "integer",
                              "example": 4,
                              "default": 0
                            },
                            "joinedAt": {
                              "type": "integer",
                              "example": 1630071782,
                              "default": 0
                            },
                            "conversationId": {
                              "type": "string",
                              "example": "group_project-group"
                            },
                            "hasJoined": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "wsChannel": {
                              "type": "object",
                              "properties": {
                                "identity": {
                                  "type": "string",
                                  "example": "[192562a02310ac0a]project-group"
                                },
                                "secret": {
                                  "type": "string",
                                  "example": "6d4a5e4c65e63f9d0e095816a7fa1bc29370c18c"
                                },
                                "service": {
                                  "type": "string",
                                  "example": "192562a02310ac0a"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "integer",
                              "example": 1630071341,
                              "default": 0
                            },
                            "owner": {
                              "type": "string",
                              "example": "superhero4"
                            },
                            "updatedAt": {
                              "type": "integer",
                              "example": 1630308875,
                              "default": 0
                            },
                            "updatedBy": {
                              "type": "string",
                              "example": "superhero4"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "project"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "conversations"
        ],
        "summary": "Delete Conversation",
        "description": "",
        "operationId": "delete-conversation",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "description": "(Required) conversation id",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "apiKey",
            "in": "header",
            "description": "API Key with fullAccess scope(i.e. Rest API Key from the Dashboard).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onBehalfOf",
            "in": "header",
            "description": "uid of the user on whose behalf the action is performed.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": {
                      "data": {
                        "success": true,
                        "message": "The conversation group_project-group has been deleted successfully for all the users."
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "message": {
                          "type": "string",
                          "example": "The conversation group_project-group has been deleted successfully for all the users."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": [
      {
        "_id": "5d1e1460da34d60127da680c",
        "key": "Content-Type",
        "value": "application/json"
      },
      {
        "_id": "5d1e1460da34d60127da680b",
        "key": "Accept",
        "value": "application/json"
      }
    ],
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "x-readme-fauxas": true
}